{
  "error": "Errore",
  "initialization": "Inizializzazione della configurazione...",
  "configCreated": "File di configurazione 'gch.config.json' creato in {path}",
  "configExists": "Il file di configurazione 'gch.config.json' esiste gi√† in {path}",
  "configCreationError": "Errore durante la creazione del file di configurazione:",
  "loadingConfig": "üîß Caricamento configurazione...",
  "configNotFound": "ERRORE: Configurazione non trovata.",
  "ensureConfig": "Assicurati di avere un file gch.config.json nella root del progetto.",
  "apiKeyNotConfigured": "ERRORE: Chiave API key non configurata.",
  "ensureApiKey": "Assicurati di avere la chiave API key di Gemini AI nel file gch.config.json.",
  "commitTypeFeat": "Una nuova funzionalit√†",
  "commitTypeFix": "Una correzione di bug",
  "commitTypeDocs": "Modifiche alla documentazione",
  "commitTypeStyle": "Formattazione, stile",
  "commitTypeRefactor": "Refactoring del codice",
  "commitTypePerf": "Miglioramento delle prestazioni",
  "commitTypeTest": "Aggiunta o modifica di test",
  "commitTypeChore": "Attivit√† di manutenzione",
  "commitTypeBreaking": "Modifica che rompe la compatibilit√†",
  "codeAnalysis": "üîç Analisi del codice in corso...",
  "reviewError": "‚ö†Ô∏è Errore durante la review:",
  "noStagedChanges": "Nessuna modifica staged per il commit",
  "generatingMessage": "‚åõ‚Äã Attendi qualche secondo per la generazione...",
  "subjectTooLong": "La riga soggetto supera {maxLength} caratteri ({length})",
  "invalidFormat": "Formato Conventional Commit non valido. Esempio: 'feat: descrizione' o 'feat(scope): descrizione'",
  "getDiffError": "Errore durante il recupero delle modifiche staged:",
  "cannotDetermineBranch": "‚ùå Impossibile determinare il branch corrente",
  "protectedBranch": "üö´ Sei sul branch protetto \"{branch}\". Il commit non √® permesso direttamente qui.",
  "newBranchName": "Inserisci il nome del nuovo branch:",
  "invalidBranchName": "Il nome del branch non √® valido",
  "branchCreated": "‚úîÔ∏è Nuovo branch '{branch}' creato e attivato.",
  "branchCreationError": "‚ùå Errore nella creazione del branch:",
  "currentBranch": "‚úÖ Branch corrente: {branch}",
  "mainTitle": "The Git Commit Helper IT",
  "exitMessage": "üîß ctrl+c => exit üîß",
  "noFilesModified": "‚ùå Nessun file modificato da aggiungere.",
  "ensureFilesModified": "Assicurati di modificare o aggiungere i file prima di eseguire il commit.",
  "fileModified": "üõ†Ô∏è File modificato: {file}",
  "fileAddedSuccess": "‚úîÔ∏è‚Äã File aggiunto con successo!",
  "filesModified": "üõ†Ô∏è File modificati ({count})\n",
  "filesSelected": "{count} file selezionati automaticamente.",
  "selectFiles": "Seleziona i file da aggiungere al commit: (default tutti selezionati)",
  "noFilesSelected": "‚ùå Nessun file selezionato. Commit annullato.",
  "filesAddedSuccess": "‚úîÔ∏è‚Äã File aggiunti con successo!",
  "askForReview": "Vuoi una review del codice prima di procedere?",
  "reviewUnavailable": "‚ö†Ô∏è‚Äã Impossibile ottenere una review",
  "reviewYourCode": "üîç Review tuo codice:\n",
  "invalidScore": "‚ö†Ô∏è‚Äã Review non contiene un punteggio valido, {score}",
  "reviewScoreLow": "\n‚ùå Review score: {score}/10 - Modifiche non sufficienti",
  "proceedAnyway": "Vuoi procedere comunque? (Attenzione: le modifiche potrebbero non essere adeguate)",
  "reviewScoreHigh": "\n‚úÖ Review score: {score}/10 - Modifiche approvate da Gemini!",
  "commitMessageUnavailable": "‚ö†Ô∏è‚Äã Impossibile generare il messaggio di commit",
  "validationError": "‚ùå Errore di validazione: {message}",
  "editCommitMessage": "Vuoi modificare il messaggio di commit?",
  "modifyingCommitMessage": "üîß Modifica del messaggio di commit...",
  "selectCommitType": "Seleziona il tipo di commit:",
  "invalidCommitType": "Tipo di commit non valido",
  "newCommitMessage": "Inserisci il nuovo messaggio di commit (solo messaggio):",
  "commitCancelled": "‚ùå Commit annullato",
  "proposedCommitPreview": "\n‚úÖ Anteprima messaggio di commit proposto:",
  "modifiedCommitPreview": "\n‚úÖ Anteprima messaggio di commit modificato:",
  "commitPreviewLine": "---",
  "confirmCommit": "Procedere con il commit?",
  "commitSuccess": "‚úîÔ∏è‚Äã Commit creato con successo!",
  "readyToPush": "\nüöÄ Pronto per il push delle modifiche...",
  "confirmPush": "Procedere con il push?",
  "pushSuccess": "‚úîÔ∏è‚Äã Push eseguito con successo!",
  "branchNoUpstream": "\n‚ö†Ô∏è Il branch '{branch}' non ha upstream remoto.",
  "runningPushUpstream": "üåê Eseguo: git push --set-upstream origin {branch}\n",
  "pushUpstreamSuccess": "‚úîÔ∏è‚Äã Push con upstream eseguito con successo!",
  "pushFailed": "‚ùå Push fallito:",
  "goodbye": "üéâ Ci sentiamo al prossimo commit! Buon sviluppo! üéâ",
  "diffTooLarge": "Le modifiche selezionate superano il limite configurato di {maxLines} righe ({actualLines} righe). Staging annullato. Per favore, crea commit pi√π piccoli.",
  "reviewPrompt": "ANALISI CODICE - ISTRUZIONI STRETTE\n\n***Obiettivo:***\nValutare le modifiche con un voto da 1 a 10 ({minReviewScore}+ = sufficiente) e fornire feedback strutturato.\n\n***Regole di risposta:***\n1. Rispondi SOLO in formato testo semplice (NO markdown/codice)\n2. Usa elenchi puntati per chiarezza\n3. Termina con \"Score: X/10\" (X = voto numerico)\n\n***Parametri di valutazione:***\n‚Ä¢ Qualit√†:\n  - Leggibilit√† (naming, formattazione)\n  - Struttura (logica, organizzazione)\n  - Stile (consistenza, best practices)\n\n‚Ä¢ Correttezza:\n  - Funzionalit√† raggiunte\n  - Bug risolti (se applicabile)\n  - Edge cases considerati\n\n‚Ä¢ Manutenibilit√†:\n  - Modularit√†\n  - Testabilit√†\n  - Documentazione implicita\n\n‚Ä¢ Problemi critici:\n  - Errori evidenti\n  - Vulnerabilit√†\n  - Anti-pattern\n\n***Formato richiesto:***\n1. Qualit√†: <feedback conciso>\n2. Correttezza: <feedback conciso>\n3. Manutenibilit√†: <feedback conciso>\n4. Problemi: <lista problemi o \"Nessuno\">\n\nScore: X/10\n\n***Diff da analizzare:***\n{diff}\n\n***Nota importante:***\nSe il diff √® vuoto o irrilevante, rispondi con:\n1. Qualit√†: Nessuna modifica rilevante\n2. Correttezza: Nessuna modifica rilevante\n3. Manutenibilit√†: Nessuna modifica rilevante\n4. Problemi: Diff non analizzabile\nScore: 0/10",
  "commitPrompt": "Genera UN SOLO messaggio di commit seguendo STRETTAMENTE queste regole:\n\nREGOLE OBBLIGATORIE:\n1. Formato: <tipo>(<ambito>)?: <descrizione>\n2. Lunghezza TOTALE MASSIMA: 50 caratteri (controlla prima di rispondere)\n3. Lingua: inglese\n4. Struttura:\n   - Tipo: feat, fix, docs, style, refactor, perf, test, chore, BREAKING CHANGE\n   - Ambito opzionale (solo se strettamente necessario)\n   - \": \" (due punti + spazio)\n   - Descrizione concisa in inglese\n\nESEMPI VALIDI (<=50 caratteri):\n- feat(auth): add login endpoint\n- fix: resolve header overflow\n- docs: update api examples\n\nESEMPI NON VALIDI:\n- \"feat: add new login system with email validation\" (troppo lungo)\n- \"fix: bug\" (troppo vago)\n\nRICHIESTA:\nAnalizza questo diff e genera SOLO il messaggio di commit (senza commenti aggiuntivi) che:\n1. Segua ESATTAMENTE il formato sopra\n2. Sia <=50 caratteri\n3. Descriva CONCISAMENTE le modifiche\n\nDiff: {diff}"
}
